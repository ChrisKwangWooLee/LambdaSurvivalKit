{"ast":null,"code":"var _jsxFileName = \"/Users/leegwangwoo/Desktop/Software_Dev/Personal_Projects/lambda-survival-kit/src/components/Clock.js\";\nimport React from 'react';\n\nfunction Clock() {\n  // Convert local time -> UTC time -> SF time\n  var date = new Date();\n  var utc_offset = date.getTimezoneOffset();\n  date.setMinutes(date.getMinutes() + utc_offset);\n  var sf_offset = 8 * 60 * -1;\n  date.setMinutes(date.getMinutes() + sf_offset); // Set clock variables\n\n  let dateArr = date.toString().split(' ');\n  console.log(dateArr); // set Day of week\n\n  let dayOfWeek = dateArr[0]; // set AM/PM and time\n\n  let dow = dateArr[0];\n  let hour = Number(dateArr[4].split(':')[0]);\n  let minutes = dateArr[4].split(':')[1];\n  let lambdaTime;\n  let ampm;\n\n  if (hour >= 0 && hour < 12) {\n    ampm = 'AM';\n    lambdaTime = `${hour.toString()}:${minutes} `;\n  } else {\n    hour = hour - 12;\n    ampm = 'PM';\n    lambdaTime = `${hour.toString()}:${minutes}`;\n  } // Change color of clock test based on time\n  // Work day (Monday - Friday) / Work time (8am - 6pm)\n\n\n  let newHour = Number(dateArr[4].split(':')[0]);\n  let workday = dow === 'Mon' || dow === 'Tue' || dow === 'Wed' || dow === 'Thur' || dow === 'Fri';\n  let worktime = newHour >= 8 && newHour <= 17;\n\n  function setClockColor(workday, worktime) {\n    if (workday && worktime) {\n      return {\n        color: \"#6BCD5B\"\n      };\n    } else {\n      return {\n        color: \"#A3A3A3\"\n      };\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"lambda-clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lambda-dayOfWeek\",\n    style: setClockColor(workday, worktime),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, dayOfWeek), React.createElement(\"p\", {\n    className: \"lambda-time\",\n    style: setClockColor(workday, worktime),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, lambdaTime, React.createElement(\"span\", {\n    style: setClockColor(workday, worktime),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, ampm)));\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/leegwangwoo/Desktop/Software_Dev/Personal_Projects/lambda-survival-kit/src/components/Clock.js"],"names":["React","Clock","date","Date","utc_offset","getTimezoneOffset","setMinutes","getMinutes","sf_offset","dateArr","toString","split","console","log","dayOfWeek","dow","hour","Number","minutes","lambdaTime","ampm","newHour","workday","worktime","setClockColor","color"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction Clock() {\n\n    // Convert local time -> UTC time -> SF time\n    var date = new Date();    \n    var utc_offset = date.getTimezoneOffset();\n    date.setMinutes(date.getMinutes() + utc_offset);\n    var sf_offset = 8 * 60 * (-1);\n    date.setMinutes(date.getMinutes() + sf_offset);\n    \n    // Set clock variables\n    let dateArr = date.toString().split(' ');\n    console.log(dateArr);\n        // set Day of week\n        let dayOfWeek = dateArr[0];\n\n        // set AM/PM and time\n        let dow = dateArr[0];\n        let hour = Number(dateArr[4].split(':')[0]);\n        let minutes = dateArr[4].split(':')[1];\n        let lambdaTime;\n        let ampm;\n        if (hour >= 0 && hour < 12) {\n            ampm = 'AM';\n            lambdaTime = `${hour.toString()}:${minutes} `;\n        } else {\n            hour = hour - 12;\n            ampm = 'PM';\n            lambdaTime = `${hour.toString()}:${minutes}`;\n        }\n\n    // Change color of clock test based on time\n    // Work day (Monday - Friday) / Work time (8am - 6pm)\n    let newHour = Number(dateArr[4].split(':')[0]);\n    let workday = (dow === 'Mon' || dow === 'Tue' || dow === 'Wed' || dow === 'Thur' || dow === 'Fri');\n    let worktime = (newHour >= 8 && newHour <= 17);\n\n    function setClockColor(workday, worktime) {\n        if (workday && worktime) {\n            return {\n                color: \"#6BCD5B\"\n            }\n        } else {\n            return {\n                color: \"#A3A3A3\"\n            }\n        }\n    }\n    return (\n        <div className=\"lambda-clock\">\n            <p className='lambda-dayOfWeek' \n               style={setClockColor(workday, worktime)}>\n                   {dayOfWeek}\n            </p>\n            <p className='lambda-time' style={setClockColor(workday, worktime)}>\n                {lambdaTime}\n                <span style={setClockColor(workday, worktime)}>{ampm}</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}